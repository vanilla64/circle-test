{"version":3,"sources":["logo.svg","ColoredUserpic/ColoredUserpic.js","avatar.jpg","App.js","reportWebVitals.js","index.js"],"names":["ColoredUserpic","props","useState","hover","setHover","src","size","margin","backgroundColor","colors","hoverColors","colorWidth","onMouseLeave","onMouseEnter","style","height","width","background","borderRadius","display","justifyContent","alignItems","overflow","objectFit","alt","App","className","avatar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAAe,I,mBCgDAA,MA7Cf,SAAwBC,GAAQ,IAAD,EACHC,oBAAS,GADN,mBACtBC,EADsB,KACfC,EADe,KAErBC,EAAwEJ,EAAxEI,IAAKC,EAAmEL,EAAnEK,KAAMC,EAA6DN,EAA7DM,OAAQC,EAAqDP,EAArDO,gBAAiBC,EAAoCR,EAApCQ,OAAQC,EAA4BT,EAA5BS,YAAaC,EAAeV,EAAfU,WAIjE,OACE,mCACE,qBACEC,aAJa,kBAAMR,GAAS,IAK5BS,aANa,kBAAMT,GAAS,IAO5BU,MAAO,CACLC,OAAQT,EACRU,MAAOV,EACPW,WAAYd,EAAK,mCACeM,EAAO,GADtB,aAC6BA,EAAO,GADpC,wCAEeC,EAAY,GAF3B,aAEkCA,EAAY,GAF9C,KAGjBQ,aAAc,MACdC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAZhB,SAcE,qBACEP,MAAO,CACPE,MAAOV,EAAOC,EAAS,KACvBQ,OAAQT,EAAOC,EAAS,KACxBC,kBACAU,aAAc,MACdI,SAAU,SACVH,QAAS,OACTC,eAAgB,SAChBC,WAAY,UATd,SAWE,qBAAKP,MAAO,CACVE,MAAOV,EAAOK,EAAa,KAC3BI,OAAQT,EAAOK,EAAa,KAC5BO,aAAc,MACdK,UAAW,SACVlB,IAAKA,EAAKmB,IAAI,kBCzCZ,MAA0B,mCCsB1BC,MAjBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,CACErB,IAAKsB,EACLrB,KAAM,IACNC,OAAQ,EACRC,gBAAgB,MAChBC,OAAQ,CAAC,QAAS,QAClBC,YAAa,CAAC,OAAQ,SACtBC,WAAY,OCHLiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f4e4e59d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState} from 'react'\n// import './ColoredUserpic.css'\n\nfunction ColoredUserpic(props) {\n  const [hover, setHover] = useState(false);\n  const { src, size, margin, backgroundColor, colors, hoverColors, colorWidth } = props\n\n  const mouseEnter = () => setHover(true)\n  const mouseLeave = () => setHover(false)\n  return (\n    <>\n      <div\n        onMouseLeave={mouseLeave}\n        onMouseEnter={mouseEnter}\n        style={{\n          height: size,\n          width: size,\n          background: hover\n            ? `linear-gradient(to left, ${colors[0]}, ${colors[1]})`\n            : `linear-gradient(to left, ${hoverColors[0]}, ${hoverColors[1]})`,\n          borderRadius: '50%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}>\n        <div\n          style={{\n          width: size - margin + 'px',\n          height: size - margin + 'px',\n          backgroundColor,\n          borderRadius: '50%',\n          overflow: \"hidden\",\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}>\n          <img style={{\n            width: size - colorWidth + 'px',\n            height: size - colorWidth + 'px',\n            borderRadius: '50%',\n            objectFit: \"cover\"\n          }} src={src} alt=\"Avatar\"/>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ColoredUserpic\n","export default __webpack_public_path__ + \"static/media/avatar.837030a2.jpg\";","import logo from './logo.svg';\nimport './App.css';\nimport ColoredUserpic from \"./ColoredUserpic/ColoredUserpic\"\nimport avatar from './avatar.jpg'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ColoredUserpic\n        src={avatar}\n        size={150}\n        margin={4}\n        backgroundColor='red'\n        colors={['green', 'blue']}\n        hoverColors={['blue', 'green']}\n        colorWidth={6}\n      />\n\n    </div>\n  );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}